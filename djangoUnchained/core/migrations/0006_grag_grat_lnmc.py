# Generated by Django 5.1.1 on 2024-10-07 16:34

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0005_alter_geol_file_fset_alter_geol_geol_bgs_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='GRAG',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('LOCA_ID', models.CharField(max_length=50, verbose_name='Location Identifier')),
                ('SAMP_TOP', models.FloatField(verbose_name='Depth to Top of Sample (m)')),
                ('SAMP_REF', models.CharField(max_length=50, verbose_name='Sample Reference')),
                ('SAMP_TYPE', models.CharField(max_length=50, verbose_name='Sample Type')),
                ('SPEC_REF', models.CharField(max_length=50, verbose_name='Specimen Reference')),
                ('SPEC_DEPTH', models.FloatField(verbose_name='Depth to Top of Test Specimen (m)')),
                ('SPEC_DESC', models.TextField(verbose_name='Specimen Description')),
                ('SPEC_PREP', models.TextField(verbose_name='Details of Specimen Preparation')),
                ('GRAG_UC', models.FloatField(verbose_name='Uniformity Coefficient (D60/D10)')),
                ('GRAG_CC', models.FloatField(verbose_name='Coefficient of Curvature')),
                ('GRAG_VCRE', models.FloatField(verbose_name='Percentage of Material Tested Greater than 63mm (%)')),
                ('GRAG_GRAV', models.FloatField(verbose_name='Percentage of Material Tested in Range 63mm to 2mm (%)')),
                ('GRAG_SAND', models.FloatField(verbose_name='Percentage of Material Tested in Range 2mm to 63um (%)')),
                ('GRAG_SILT', models.FloatField(verbose_name='Percentage of Material Tested in Range 63um to 2um (%)')),
                ('GRAG_CLAY', models.FloatField(verbose_name='Percentage of Material Tested Less than 2um (%)')),
                ('GRAG_FINE', models.FloatField(verbose_name='Percentage Less than 63um (%)')),
                ('GRAG_REM', models.TextField(verbose_name='Remarks')),
                ('GRAG_METH', models.CharField(max_length=100, verbose_name='Test Method')),
                ('GRAG_LAB', models.CharField(max_length=100, verbose_name='Name of Testing Laboratory/Organization')),
                ('GRAG_CRED', models.CharField(max_length=50, verbose_name='Accrediting Body and Reference Number')),
                ('TEST_STAT', models.CharField(max_length=50, verbose_name='Test Status')),
                ('FILE_FSET', models.CharField(max_length=255, verbose_name='Associated File Reference')),
                ('SPEC_BASE', models.FloatField(verbose_name='Depth to Base of Specimen (m)')),
                ('GRAG_DEV', models.TextField(verbose_name='Deviation from the Specified Test Procedure')),
                ('GRAG_PDEN', models.FloatField(verbose_name='Particle Density (Mg/m3)')),
                ('GRAG_PRET', models.CharField(max_length=255, verbose_name='Method of Pre-treatment')),
                ('GRAG_SUFF', models.CharField(max_length=2, verbose_name='Sufficiency of Soil Tested')),
                ('GRAG_EXCL', models.TextField(verbose_name='Exclusion Remark')),
                ('SAMP_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='particle_size_distribution', to='core.samp', verbose_name='Sample ID')),
            ],
        ),
        migrations.CreateModel(
            name='GRAT',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('LOCA_ID', models.CharField(max_length=50, verbose_name='Location Identifier')),
                ('SAMP_TOP', models.FloatField(verbose_name='Depth to Top of Sample (m)')),
                ('SAMP_REF', models.CharField(max_length=50, verbose_name='Sample Reference')),
                ('SAMP_TYPE', models.CharField(max_length=50, verbose_name='Sample Type')),
                ('SPEC_REF', models.CharField(max_length=50, verbose_name='Specimen Reference')),
                ('SPEC_DPTH', models.FloatField(verbose_name='Depth to Top of Test Specimen (m)')),
                ('GRAT_SIZE', models.FloatField(verbose_name='Sieve or Particle Size (mm)')),
                ('GRAT_PERP', models.FloatField(verbose_name='Percentage Passing/Finer than GRAT_SIZE (%)')),
                ('GRAT_TYPE', models.CharField(max_length=50, verbose_name='Test Type')),
                ('GRAT_REM', models.TextField(verbose_name='Remarks')),
                ('FILE_FSET', models.CharField(max_length=255, verbose_name='Associated File Reference')),
                ('SAMP_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='particle_size_distribution_data', to='core.grag', verbose_name='Sample ID')),
            ],
        ),
        migrations.CreateModel(
            name='LNMC',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('LOCA_ID', models.CharField(max_length=50, verbose_name='Location Identifier')),
                ('SAMP_TOP', models.FloatField(verbose_name='Depth to Top of Sample (m)')),
                ('SAMP_REF', models.CharField(max_length=50, verbose_name='Sample Reference')),
                ('SAMP_TYPE', models.CharField(max_length=50, verbose_name='Sample Type')),
                ('SPEC_REF', models.CharField(max_length=50, verbose_name='Specimen Reference')),
                ('SPEC_DEPTH', models.FloatField(verbose_name='Depth to Top of Test Specimen (m)')),
                ('SPEC_DESC', models.TextField(verbose_name='Specimen Description')),
                ('SPEC_PREP', models.TextField(verbose_name='Details of Specimen Preparation')),
                ('LNMC_MC', models.FloatField(verbose_name='Water/Moisture Content (%)')),
                ('LNMC_TEMP', models.FloatField(verbose_name='Temperature Sample Dried at (Â°C)')),
                ('LNMC_STAB', models.FloatField(verbose_name='Amount of Stabiliser Added (%)')),
                ('LNMC_STYP', models.CharField(max_length=50, verbose_name='Type of Stabiliser Added')),
                ('LNMC_INST', models.CharField(max_length=2, verbose_name='Is Test Result Assumed to be Natural Water/Moisture Content')),
                ('LNMC_COMM', models.TextField(verbose_name='Reason Water/Moisture Content is Assumed to be Other than Natural')),
                ('LNMC_REM', models.TextField(verbose_name='Remarks')),
                ('LNMC_METH', models.CharField(max_length=50, verbose_name='Test Method')),
                ('LNMC_LAB', models.CharField(max_length=100, verbose_name='Name of Testing Laboratory/Organization')),
                ('LNMC_CRED', models.CharField(max_length=50, verbose_name='Accrediting Body and Reference Number')),
                ('TEST_STAT', models.CharField(max_length=50, verbose_name='Test Status')),
                ('FILE_FSET', models.CharField(max_length=255, verbose_name='File Reference')),
                ('SPEC_BASE', models.FloatField(verbose_name='Depth to Base of Specimen (m)')),
                ('LNMC_DEV', models.TextField(blank=True, null=True, verbose_name='Deviation from the Specified Procedure')),
                ('SAMP_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='moisture_content', to='core.samp', verbose_name='Sample ID')),
            ],
        ),
    ]
