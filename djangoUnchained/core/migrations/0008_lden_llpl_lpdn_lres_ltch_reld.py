# Generated by Django 5.1.1 on 2024-10-08 09:46

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0007_alter_grat_grat_perp_alter_grat_grat_size_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='LDEN',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('LOCA_ID', models.CharField(max_length=50, verbose_name='Location Identifier')),
                ('SAMP_TOP', models.FloatField(verbose_name='Depth to Top of Sample (m)')),
                ('SAMP_REF', models.CharField(max_length=50, verbose_name='Sample Reference')),
                ('SAMP_TYPE', models.CharField(max_length=50, verbose_name='Sample Type')),
                ('SPEC_REF', models.CharField(max_length=50, verbose_name='Specimen Reference')),
                ('SPEC_DPTH', models.FloatField(verbose_name='Depth to Top of Test Specimen (m)')),
                ('SPEC_DESC', models.TextField(blank=True, verbose_name='Specimen Description')),
                ('SPEC_PREP', models.TextField(blank=True, verbose_name='Specimen Preparation Details')),
                ('LDEN_TYPE', models.CharField(blank=True, max_length=50, verbose_name='Type of Test Performed')),
                ('LDEN_COND', models.CharField(blank=True, max_length=50, verbose_name='Sample Condition')),
                ('LDEN_SMITY', models.CharField(blank=True, max_length=50, verbose_name='Type of Sample')),
                ('LDEN_MC', models.FloatField(null=True, verbose_name='Water/Moisture Content (%)')),
                ('LDEN_BDEN', models.FloatField(null=True, verbose_name='Bulk Density (Mg/m³)')),
                ('LDEN_DDEN', models.FloatField(null=True, verbose_name='Dry Density (Mg/m³)')),
                ('LDEN_REM', models.TextField(blank=True, verbose_name='Remarks')),
                ('LDEN_METH', models.CharField(blank=True, max_length=100, verbose_name='Test Method')),
                ('LDEN_LAB', models.CharField(blank=True, max_length=100, verbose_name='Laboratory Name')),
                ('LDEN_CRED', models.CharField(blank=True, max_length=50, verbose_name='Accrediting Body and Reference')),
                ('TEST_STAT', models.CharField(blank=True, max_length=50, verbose_name='Test Status')),
                ('FILE_FSET', models.CharField(blank=True, max_length=255, verbose_name='File Reference')),
                ('SPEC_BASE', models.FloatField(null=True, verbose_name='Depth to Base of Specimen (m)')),
                ('LDEN_DEV', models.CharField(blank=True, max_length=255, verbose_name='Deviation from Standard Procedure')),
                ('SAMP_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bulk_density', to='core.samp', verbose_name='Sample ID')),
            ],
        ),
        migrations.CreateModel(
            name='LLPL',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('LOCA_ID', models.CharField(blank=True, max_length=50, verbose_name='Location Identifier')),
                ('SAMP_TOP', models.FloatField(null=True, verbose_name='Depth to Top of Sample')),
                ('SAMP_REF', models.CharField(blank=True, max_length=50, verbose_name='Sample Reference')),
                ('SAMP_TYPE', models.CharField(blank=True, max_length=50, verbose_name='Sample Type')),
                ('SPEC_REF', models.CharField(blank=True, max_length=50, verbose_name='Specimen Reference')),
                ('SPEC_DPTH', models.FloatField(null=True, verbose_name='Depth to Top of Test Specimen')),
                ('SPEC_DESC', models.TextField(blank=True, verbose_name='Specimen Description')),
                ('SPEC_PREP', models.TextField(blank=True, verbose_name='Details of Specimen Preparation')),
                ('LLPL_LL', models.FloatField(null=True, verbose_name='Liquid Limit')),
                ('LLPL_PL', models.FloatField(null=True, verbose_name='Plastic Limit')),
                ('LLPL_PI', models.FloatField(null=True, verbose_name='Plasticity Index')),
                ('LLPL_425', models.FloatField(null=True, verbose_name='Percentage Passing 0.425mm Sieve')),
                ('LLPL_PREP', models.CharField(blank=True, max_length=50, verbose_name='Method of Preparation')),
                ('LLPL_STAB', models.FloatField(null=True, verbose_name='Amount of Stabiliser Added')),
                ('LLPL_STYP', models.CharField(blank=True, max_length=50, verbose_name='Type of Stabiliser Added')),
                ('LLPL_REM', models.TextField(blank=True, verbose_name='Remarks')),
                ('LLPL_METH', models.CharField(blank=True, max_length=50, verbose_name='Test Method')),
                ('LLPL_LAB', models.CharField(blank=True, max_length=255, verbose_name='Name of Testing Laboratory/Organization')),
                ('LLPL_CRED', models.CharField(blank=True, max_length=50, verbose_name='Accrediting Body and Reference Number')),
                ('TEST_STAT', models.CharField(blank=True, max_length=50, verbose_name='Test Status')),
                ('FILE_FSET', models.CharField(blank=True, max_length=255, verbose_name='File Reference')),
                ('SPEC_BASE', models.FloatField(null=True, verbose_name='Depth to Base of Specimen')),
                ('LLPL_DEV', models.CharField(blank=True, max_length=50, verbose_name='Deviation from the Specified Procedure')),
                ('LLPL_TYPE', models.CharField(blank=True, max_length=50, verbose_name='Type of Test')),
                ('LLPL_POIN', models.CharField(blank=True, max_length=50, verbose_name='Number of Points')),
                ('LLPL_CONE', models.CharField(blank=True, max_length=50, verbose_name='For Cone Method, Type of Cone')),
                ('LLPL_1PRE', models.FloatField(null=True, verbose_name='Mean of Test Readings, if One-Point Test')),
                ('LLPL_1PCF', models.FloatField(null=True, verbose_name='Correlation Factor if One-Point Test')),
                ('LLPL_SIZE', models.FloatField(null=True, verbose_name='Sieve Size if Other than 0.425mm')),
                ('LLPL_PASS', models.FloatField(null=True, verbose_name='Percentage Passing LLPL_SIZE Sieve if Other than 0.425mm')),
                ('LLPL_WC', models.FloatField(null=True, verbose_name='Water Content of the Specimen Before Removal of Particles')),
                ('SAMP_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='atterberg', to='core.samp', verbose_name='Sample ID')),
            ],
        ),
        migrations.CreateModel(
            name='LPDN',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('LOCA_ID', models.CharField(blank=True, max_length=50, verbose_name='Location Identifier')),
                ('SAMP_TOP', models.FloatField(null=True, verbose_name='Depth to Top of Sample')),
                ('SAMP_REF', models.CharField(blank=True, max_length=50, verbose_name='Sample Reference')),
                ('SAMP_TYPE', models.CharField(blank=True, max_length=50, verbose_name='Sample Type')),
                ('SPEC_REF', models.CharField(blank=True, max_length=50, verbose_name='Specimen Reference')),
                ('SPEC_DPTH', models.FloatField(null=True, verbose_name='Depth to Top of Test Specimen')),
                ('SPEC_DESC', models.TextField(blank=True, verbose_name='Specimen Description')),
                ('SPEC_PREP', models.TextField(blank=True, verbose_name='Details of Specimen Preparation')),
                ('LPDN_PDEN', models.FloatField(null=True, verbose_name='Particle Density (Mg/m³)')),
                ('LPDN_TYPE', models.CharField(blank=True, max_length=50, verbose_name='Type of Test')),
                ('LPDN_REM', models.TextField(blank=True, verbose_name='Remarks')),
                ('LPDN_METH', models.CharField(blank=True, max_length=50, verbose_name='Test Method')),
                ('LPDN_LAB', models.CharField(blank=True, max_length=255, verbose_name='Name of Testing Laboratory/Organization')),
                ('LPDN_CRED', models.CharField(blank=True, max_length=50, verbose_name='Accrediting Body and Reference Number')),
                ('TEST_STAT', models.CharField(blank=True, max_length=50, verbose_name='Test Status')),
                ('FILE_FSET', models.CharField(blank=True, max_length=255, verbose_name='File Reference')),
                ('SPEC_BASE', models.FloatField(null=True, verbose_name='Depth to Base of Specimen')),
                ('LPDN_DEV', models.TextField(blank=True, verbose_name='Deviation from the Specified Test Procedure')),
                ('LPDN_PVOL', models.FloatField(null=True, verbose_name='Pycnometer Volume if Used and Not 50ml')),
                ('LPDN_GAS', models.CharField(blank=True, max_length=50, verbose_name='Identity of Gas if Pycnometer Used')),
                ('SAMP_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='particle_density', to='core.samp', verbose_name='Sample ID')),
            ],
        ),
        migrations.CreateModel(
            name='LRES',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('LOCA_ID', models.CharField(blank=True, max_length=50, verbose_name='Location Identifier')),
                ('SAMP_TOP', models.FloatField(null=True, verbose_name='Depth to Top of Sample')),
                ('SAMP_REF', models.CharField(blank=True, max_length=50, verbose_name='Sample Reference')),
                ('SAMP_TYPE', models.CharField(blank=True, max_length=50, verbose_name='Sample Type')),
                ('SPEC_REF', models.CharField(blank=True, max_length=50, verbose_name='Specimen Reference')),
                ('SPEC_DPTH', models.FloatField(null=True, verbose_name='Depth to Top of Test Specimen')),
                ('SPEC_DESC', models.TextField(blank=True, verbose_name='Specimen Description')),
                ('SPEC_PREP', models.TextField(blank=True, verbose_name='Details of Specimen Preparation')),
                ('LRES_BDEN', models.FloatField(null=True, verbose_name='Bulk Density (Mg/m³)')),
                ('LRES_DDEN', models.FloatField(null=True, verbose_name='Dry Density (Mg/m³)')),
                ('LRES_MC', models.FloatField(null=True, verbose_name='Water/Moisture Content (%)')),
                ('LRES_COND', models.TextField(blank=True, verbose_name='Sample Condition Details')),
                ('LRES_LRES', models.FloatField(null=True, verbose_name='Temperature Corrected Resistivity (ohm m)')),
                ('LRES_CDIA', models.FloatField(null=True, verbose_name='Diameter of Container (mm)')),
                ('LRES_CCSA', models.FloatField(null=True, verbose_name='Container Cross-Sectional Area (mm²)')),
                ('LRES_CLEN', models.FloatField(null=True, verbose_name='Length of Container (mm)')),
                ('LRES_TEMP', models.FloatField(null=True, verbose_name='Temperature at Which Test Performed (°C)')),
                ('LRES_ELEC', models.TextField(blank=True, verbose_name='Type of Electrodes')),
                ('LRES_PENT', models.TextField(blank=True, verbose_name='Probes Dimensions and Details')),
                ('LRES_CSHP', models.CharField(blank=True, max_length=50, verbose_name='Shape of Container')),
                ('LRES_WAT', models.FloatField(null=True, verbose_name='Volume of Water (ml)')),
                ('LRES_WRES', models.FloatField(null=True, verbose_name='Water Resistivity (ohm m)')),
                ('LRES_PART', models.TextField(blank=True, verbose_name='Percentage of Large Particles Removed')),
                ('LRES_REM', models.TextField(blank=True, verbose_name='Remarks')),
                ('LRES_METH', models.CharField(blank=True, max_length=255, verbose_name='Test Method')),
                ('LRES_LAB', models.CharField(blank=True, max_length=255, verbose_name='Testing Laboratory Name')),
                ('LRES_CRED', models.CharField(blank=True, max_length=50, verbose_name='Accrediting Body Reference')),
                ('TEST_STAT', models.CharField(blank=True, max_length=50, verbose_name='Test Status')),
                ('FILE_FSET', models.CharField(blank=True, max_length=255, verbose_name='File Reference')),
                ('SPEC_BASE', models.FloatField(null=True, verbose_name='Depth to Base of Specimen')),
                ('LRES_DEV', models.TextField(blank=True, verbose_name='Deviation from Test Procedure')),
                ('SAMP_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='electrical_resistivity', to='core.samp', verbose_name='Sample ID')),
            ],
        ),
        migrations.CreateModel(
            name='LTCH',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('LOCA_ID', models.CharField(blank=True, max_length=50, verbose_name='Location Identifier')),
                ('SAMP_TOP', models.FloatField(null=True, verbose_name='Depth to Top of Sample')),
                ('SAMP_REF', models.CharField(blank=True, max_length=50, verbose_name='Sample Reference')),
                ('SAMP_TYPE', models.CharField(blank=True, max_length=50, verbose_name='Sample Type')),
                ('SPEC_REF', models.CharField(blank=True, max_length=50, verbose_name='Specimen Reference')),
                ('SPEC_DPTH', models.FloatField(null=True, verbose_name='Depth to Top of Test Specimen')),
                ('SPEC_DESC', models.TextField(blank=True, verbose_name='Specimen Description')),
                ('SPEC_PREP', models.TextField(blank=True, verbose_name='Details of Specimen Preparation')),
                ('SPEC_BASE', models.FloatField(null=True, verbose_name='Depth to Base of Specimen')),
                ('LTCH_COND', models.TextField(blank=True, verbose_name='Sample Condition')),
                ('LTCH_BDEN', models.FloatField(null=True, verbose_name='Bulk Density (Mg/m³)')),
                ('LTCH_DDEN', models.FloatField(null=True, verbose_name='Dry Density (Mg/m³)')),
                ('LTCH_MC', models.FloatField(null=True, verbose_name='Water/Moisture Content (%)')),
                ('LTCH_TCON', models.FloatField(null=True, verbose_name='Thermal Conductivity (W/(K-m))')),
                ('LTCH_TRES', models.FloatField(null=True, verbose_name='Thermal Resistivity (K-m/W)')),
                ('LTCH_TEMP', models.FloatField(null=True, verbose_name='Ambient Temperature at Test (°C)')),
                ('LTCH_PDIA', models.FloatField(null=True, verbose_name='Probe Diameter (mm)')),
                ('LTCH_PSPA', models.FloatField(null=True, verbose_name='Probe Spacing (mm)')),
                ('LTCH_PPEN', models.FloatField(null=True, verbose_name='Probe Penetration (mm)')),
                ('LTCH_PRBE', models.TextField(blank=True, verbose_name='Method of Probe Insertion')),
                ('LTCH_PART', models.TextField(blank=True, verbose_name='Particle Grain Size Removed')),
                ('LTCH_DEV', models.TextField(blank=True, verbose_name='Deviation from the Procedure')),
                ('LTCH_REM', models.TextField(blank=True, verbose_name='Remarks')),
                ('LTCH_METH', models.CharField(blank=True, max_length=255, verbose_name='Test Method')),
                ('LTCH_LAB', models.CharField(blank=True, max_length=255, verbose_name='Testing Laboratory Name')),
                ('LTCH_CRED', models.CharField(blank=True, max_length=50, verbose_name='Accrediting Body Reference')),
                ('TEST_STAT', models.CharField(blank=True, max_length=50, verbose_name='Test Status')),
                ('FILE_FSET', models.CharField(blank=True, max_length=255, verbose_name='Associated File Reference')),
                ('SAMP_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='thermal_conductivity', to='core.samp', verbose_name='Sample ID')),
            ],
        ),
        migrations.CreateModel(
            name='RELD',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('LOCA_ID', models.CharField(blank=True, max_length=50, verbose_name='Location Identifier')),
                ('SAMP_TOP', models.FloatField(null=True, verbose_name='Depth to Top of Sample')),
                ('SAMP_REF', models.CharField(blank=True, max_length=50, verbose_name='Sample Reference')),
                ('SAMP_TYPE', models.CharField(blank=True, max_length=50, verbose_name='Sample Type')),
                ('SPEC_REF', models.CharField(blank=True, max_length=50, verbose_name='Specimen Reference')),
                ('SPEC_DPTH', models.FloatField(null=True, verbose_name='Depth to Top of Test Specimen')),
                ('SPEC_DESC', models.TextField(blank=True, verbose_name='Specimen Description')),
                ('SPEC_PREP', models.TextField(blank=True, verbose_name='Details of Specimen Preparation')),
                ('RELD_DMAX', models.FloatField(null=True, verbose_name='Maximum Dry Density (Mg/m³)')),
                ('RELD_375', models.FloatField(null=True, verbose_name='Percent Retained on 37.5mm Sieve (%)')),
                ('RELD_063', models.FloatField(null=True, verbose_name='Percent Retained on 6.3mm Sieve (%)')),
                ('RELD_020', models.FloatField(null=True, verbose_name='Percent Retained on 2mm Sieve (%)')),
                ('RELD_DMIN', models.FloatField(null=True, verbose_name='Minimum Dry Density (Mg/m³)')),
                ('RELD_REM', models.TextField(blank=True, verbose_name='Remarks')),
                ('RELD_METH', models.CharField(blank=True, max_length=255, verbose_name='Test Method')),
                ('RELD_LAB', models.CharField(blank=True, max_length=255, verbose_name='Testing Laboratory Name')),
                ('RELD_CRED', models.CharField(blank=True, max_length=50, verbose_name='Accrediting Body Reference')),
                ('TEST_STAT', models.CharField(blank=True, max_length=50, verbose_name='Test Status')),
                ('FILE_FSET', models.CharField(blank=True, max_length=255, verbose_name='Associated File Reference')),
                ('SPEC_BASE', models.FloatField(null=True, verbose_name='Depth to Base of Specimen')),
                ('RELD_DEV', models.TextField(blank=True, verbose_name='Deviation from the Specified Procedure')),
                ('SAMP_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='minmax', to='core.samp', verbose_name='Sample ID')),
            ],
        ),
    ]
