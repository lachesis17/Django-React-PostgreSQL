# Generated by Django 5.1.1 on 2024-10-08 12:31

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0010_alter_pslt_pslg_tesn_alter_scct_sccg_tesn_and_more'),
    ]

    operations = [
        migrations.RenameField(
            model_name='cong',
            old_name='CONG_CSQ',
            new_name='CONG_SQ',
        ),
        migrations.AlterField(
            model_name='grag',
            name='FILE_FSET',
            field=models.CharField(max_length=255, verbose_name='File reference'),
        ),
        migrations.AlterField(
            model_name='grat',
            name='FILE_FSET',
            field=models.CharField(max_length=255, verbose_name='File reference'),
        ),
        migrations.AlterField(
            model_name='ltch',
            name='FILE_FSET',
            field=models.CharField(blank=True, max_length=255, verbose_name='File reference'),
        ),
        migrations.AlterField(
            model_name='pslg',
            name='FILE_FSET',
            field=models.CharField(blank=True, max_length=255, verbose_name='File reference'),
        ),
        migrations.AlterField(
            model_name='ptst',
            name='FILE_FSET',
            field=models.CharField(blank=True, max_length=255, verbose_name='File reference'),
        ),
        migrations.AlterField(
            model_name='reld',
            name='FILE_FSET',
            field=models.CharField(blank=True, max_length=255, verbose_name='File reference'),
        ),
        migrations.AlterField(
            model_name='scct',
            name='FILE_FSET',
            field=models.CharField(max_length=255, verbose_name='File reference'),
        ),
        migrations.AlterField(
            model_name='scct',
            name='LOCA_ID',
            field=models.CharField(max_length=50, verbose_name='Location'),
        ),
        migrations.AlterField(
            model_name='scct',
            name='SCCG_TESN',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='seismic_test', to='core.sccg', verbose_name='Cone ID'),
        ),
        migrations.AlterField(
            model_name='scpg',
            name='LOCA_ID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cpt_general', to='core.loca', verbose_name='Location'),
        ),
        migrations.AlterField(
            model_name='scpt',
            name='SCPG_TESN',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='cpt_test', to='core.scpg', verbose_name='Cone ID'),
        ),
        migrations.AlterField(
            model_name='trit',
            name='FILE_FSET',
            field=models.CharField(blank=True, max_length=255, verbose_name='File reference'),
        ),
        migrations.CreateModel(
            name='LDYN',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('LOCA_ID', models.CharField(blank=True, max_length=50)),
                ('SAMP_TOP', models.FloatField(null=True)),
                ('SAMP_REF', models.CharField(blank=True, max_length=50)),
                ('SAMP_TYPE', models.CharField(blank=True, max_length=50)),
                ('SPEC_REF', models.CharField(blank=True, max_length=50)),
                ('SPEC_DPTH', models.FloatField(null=True)),
                ('SPEC_DESC', models.TextField(blank=True)),
                ('SPEC_PREP', models.TextField(blank=True)),
                ('LDYN_PWAV', models.FloatField(null=True, verbose_name='P-wave velocity (m/s)')),
                ('LDYN_SWAV', models.FloatField(null=True, verbose_name='S-wave velocity (m/s)')),
                ('LDYN_EMOD', models.FloatField(null=True, verbose_name='Dynamic elastic modulus (GPa)')),
                ('LDYN_SG', models.FloatField(null=True, verbose_name='Shear modulus (GPa)')),
                ('LDYN_REM', models.TextField(blank=True, verbose_name='Remarks')),
                ('LDYN_METH', models.CharField(blank=True, max_length=255, verbose_name='Test Method')),
                ('LDYN_LAB', models.CharField(blank=True, max_length=255, verbose_name='Laboratory Name')),
                ('LDYN_CRED', models.CharField(blank=True, max_length=255, verbose_name='Accrediting Body and Reference Number')),
                ('TEST_STAT', models.CharField(blank=True, max_length=50, verbose_name='Test Status')),
                ('FILE_FSET', models.CharField(blank=True, max_length=255, verbose_name='File reference')),
                ('SPEC_BASE', models.FloatField(null=True, verbose_name='Depth to Base of Specimen')),
                ('LDYN_DEV', models.TextField(blank=True, verbose_name='Deviation from the Specified Procedure')),
                ('SAMP_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bender', to='core.samp', verbose_name='Sample ID')),
            ],
        ),
        migrations.CreateModel(
            name='LPEN',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('LOCA_ID', models.CharField(blank=True, max_length=50, verbose_name='Location')),
                ('SAMP_TOP', models.FloatField(null=True, verbose_name='Depth to top of sample')),
                ('SAMP_REF', models.CharField(blank=True, max_length=50, verbose_name='Sample reference')),
                ('SAMP_TYPE', models.CharField(blank=True, max_length=50, verbose_name='Sample type')),
                ('SPEC_REF', models.CharField(blank=True, max_length=50, verbose_name='Specimen reference')),
                ('SPEC_DPTH', models.FloatField(null=True, verbose_name='Depth to top of specimen')),
                ('SPEC_DESC', models.TextField(blank=True, verbose_name='Specimen description')),
                ('SPEC_PREP', models.TextField(blank=True, verbose_name='Details of specimen preparation')),
                ('LPEN_PPEN', models.FloatField(null=True, verbose_name='Hand penetrometer undrained shear strength')),
                ('LPEN_MC', models.FloatField(null=True, verbose_name='Water/moisture content local to test')),
                ('LPEN_REM', models.TextField(blank=True, verbose_name='Remarks')),
                ('LPEN_METH', models.CharField(blank=True, max_length=255, verbose_name='Test method')),
                ('LPEN_LAB', models.CharField(blank=True, max_length=255, verbose_name='Name of testing laboratory/organization')),
                ('LPEN_CRED', models.CharField(blank=True, max_length=255, verbose_name='Accrediting body and reference number')),
                ('TEST_STAT', models.CharField(blank=True, max_length=50, verbose_name='Test status')),
                ('FILE_FSET', models.CharField(blank=True, max_length=255, verbose_name='File reference')),
                ('SPEC_BASE', models.FloatField(null=True, verbose_name='Depth to base of specimen')),
                ('SAMP_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hand_pen', to='core.samp', verbose_name='Sample ID')),
            ],
        ),
        migrations.CreateModel(
            name='LVAN',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('LOCA_ID', models.CharField(blank=True, max_length=50, verbose_name='Location')),
                ('SAMP_TOP', models.FloatField(null=True, verbose_name='Depth to top of sample')),
                ('SAMP_REF', models.CharField(blank=True, max_length=50, verbose_name='Sample reference')),
                ('SAMP_TYPE', models.CharField(blank=True, max_length=50, verbose_name='Sample type')),
                ('SPEC_REF', models.CharField(blank=True, max_length=50, verbose_name='Specimen reference')),
                ('SPEC_DPTH', models.FloatField(null=True, verbose_name='Depth to top of specimen')),
                ('SPEC_DESC', models.TextField(blank=True, verbose_name='Specimen description')),
                ('SPEC_PREP', models.TextField(blank=True, verbose_name='Details of specimen preparation')),
                ('LVAN_VNPK', models.FloatField(null=True, verbose_name='Vane undrained shear strength (peak)')),
                ('LVAN_VNRM', models.FloatField(null=True, verbose_name='Vane undrained shear strength (remoulded)')),
                ('LVAN_MC', models.FloatField(null=True, verbose_name='Water/moisture content local to the test')),
                ('LVAN_SIZE', models.FloatField(null=True, verbose_name='Equivalent diameter of vane')),
                ('LVAN_VLEN', models.FloatField(null=True, verbose_name='Length of vane')),
                ('LVAN_REM', models.TextField(blank=True, verbose_name='Remarks')),
                ('LVAN_METH', models.CharField(blank=True, max_length=255, verbose_name='Test method')),
                ('LVAN_LAB', models.CharField(blank=True, max_length=255, verbose_name='Name of testing laboratory/organization')),
                ('LVAN_CRED', models.CharField(blank=True, max_length=255, verbose_name='Accrediting body and reference number')),
                ('TEST_STAT', models.CharField(blank=True, max_length=50, verbose_name='Test status')),
                ('FILE_FSET', models.CharField(blank=True, max_length=255, verbose_name='File reference')),
                ('SPEC_BASE', models.FloatField(null=True, verbose_name='Depth to base of specimen')),
                ('LVAN_DEV', models.TextField(blank=True, verbose_name='Deviation from the specified procedure')),
                ('LVAN_TYPE', models.CharField(blank=True, max_length=50, verbose_name='Vane type')),
                ('SAMP_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lab_vane', to='core.samp', verbose_name='Sample ID')),
            ],
        ),
        migrations.CreateModel(
            name='SHBG',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('LOCA_ID', models.CharField(max_length=255, verbose_name='Location')),
                ('SAMP_TOP', models.FloatField(verbose_name='Depth to top of sample')),
                ('SAMP_REF', models.CharField(max_length=255, verbose_name='Sample Reference')),
                ('SAMP_TYPE', models.CharField(max_length=255, verbose_name='Sample Type')),
                ('SPEC_REF', models.CharField(max_length=255, verbose_name='Specimen Reference')),
                ('SPEC_DPTH', models.FloatField(verbose_name='Depth to top of test specimen')),
                ('SPEC_DESC', models.TextField(verbose_name='Specimen Description')),
                ('SPEC_PREP', models.TextField(verbose_name='Details of Specimen Preparation')),
                ('SHBG_TYPE', models.CharField(max_length=255, verbose_name='Test Type')),
                ('SHBG_COND', models.CharField(max_length=255, verbose_name='Sample Condition')),
                ('SHBG_CONS', models.TextField(verbose_name='Specific Condition Statements')),
                ('SHBG_PCOH', models.FloatField(verbose_name='Peak Cohesion Intercept')),
                ('SHBG_PHI', models.FloatField(verbose_name='Peak Angle of Friction')),
                ('SHBG_RCOH', models.FloatField(verbose_name='Residual Cohesion Intercept')),
                ('SHBG_RPHI', models.FloatField(verbose_name='Residual Angle of Friction')),
                ('SHBG_ENCA', models.TextField(verbose_name='Method of Encapsulation of Specimens Tested')),
                ('SHBG_REM', models.TextField(verbose_name='Remarks')),
                ('SHBG_METH', models.CharField(max_length=255, verbose_name='Test Method')),
                ('SHBG_LAB', models.CharField(max_length=255, verbose_name='Name of Testing Laboratory/Organization')),
                ('SHBG_CRED', models.CharField(max_length=255, verbose_name='Accrediting Body and Reference Number')),
                ('TEST_STAT', models.CharField(max_length=255, verbose_name='Test Status')),
                ('FILE_FSET', models.CharField(max_length=255, verbose_name='File reference')),
                ('SPEC_BASE', models.FloatField(verbose_name='Depth to Base of Specimen')),
                ('SHBG_DEV', models.TextField(verbose_name='Deviation from the Specified Procedure')),
                ('SAMP_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shearbox_general', to='core.samp', verbose_name='Sample ID')),
            ],
        ),
        migrations.CreateModel(
            name='SHBT',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('LOCA_ID', models.CharField(max_length=255, verbose_name='Location')),
                ('SAMP_TOP', models.FloatField(verbose_name='Depth to Top of Sample')),
                ('SAMP_REF', models.CharField(max_length=255, verbose_name='Sample Reference')),
                ('SAMP_TYPE', models.CharField(max_length=255, verbose_name='Sample Type')),
                ('SPEC_REF', models.CharField(max_length=255, verbose_name='Specimen Reference')),
                ('SPEC_DPTH', models.FloatField(verbose_name='Depth to Top of Test Specimen')),
                ('SHBT_TESN', models.CharField(max_length=255, verbose_name='Shear Box Test Stage/Specimen Reference')),
                ('SHBT_BDEN', models.FloatField(verbose_name='Initial Bulk Density')),
                ('SHBT_DDEN', models.FloatField(verbose_name='Initial Dry Density')),
                ('SHBT_NORM', models.FloatField(verbose_name='Normal Stress Applied')),
                ('SHBT_DISP', models.FloatField(verbose_name='Displacement Rate for Peak Stress Stage')),
                ('SHBT_DISR', models.FloatField(verbose_name='Displacement Rate for Residual Stress Stage')),
                ('SHBT_REVS', models.IntegerField(verbose_name='Number of Traverses if Residual Test')),
                ('SHBT_PEAK', models.FloatField(verbose_name='Peak Shear Stress')),
                ('SHBT_RES', models.FloatField(verbose_name='Residual Shear Stress')),
                ('SHBT_PDIS', models.FloatField(verbose_name='Horizontal Displacement at Peak')),
                ('SHBT_RDIS', models.FloatField(verbose_name='Horizontal Displacement at Residual')),
                ('SHBT_PDIN', models.FloatField(verbose_name='Vertical Displacement at Peak Shear Stress')),
                ('SHBT_RDIN', models.FloatField(verbose_name='Vertical Displacement at Residual Shear Stress')),
                ('SHBT_PDEN', models.FloatField(verbose_name='Particle Density')),
                ('SHBT_IVR', models.FloatField(verbose_name='Initial Voids Ratio')),
                ('SHBT_MCI', models.FloatField(verbose_name='Initial Water/Moisture Content')),
                ('SHBT_MCF', models.FloatField(verbose_name='Final Water/Moisture Content')),
                ('SHBT_DIA1', models.FloatField(verbose_name='Specimen Diameter in Direction of Shear (Rock Joints)')),
                ('SHBT_DIA2', models.FloatField(verbose_name='Specimen Diameter Perpendicular to Shear (Rock Joints)')),
                ('SHBT_HGT', models.FloatField(verbose_name='Specimen Height')),
                ('SHBT_CRIT', models.TextField(verbose_name='Failure/Residual Strength Criterion Used')),
                ('SHBT_REM', models.TextField(verbose_name='Remarks')),
                ('FILE_FSET', models.CharField(max_length=255, verbose_name='File reference')),
                ('SHBT_PVST', models.FloatField(verbose_name='Normal (Vertical) Stress at Peak')),
                ('SHBT_RVST', models.FloatField(verbose_name='Normal (Vertical) Stress at Residual')),
                ('SAMP_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shearbox_test', to='core.shbg', verbose_name='Sample ID')),
            ],
        ),
        migrations.CreateModel(
            name='TREG',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('LOCA_ID', models.CharField(blank=True, max_length=50)),
                ('SAMP_TOP', models.FloatField(null=True)),
                ('SAMP_REF', models.CharField(blank=True, max_length=50)),
                ('SAMP_TYPE', models.CharField(blank=True, max_length=50)),
                ('SPEC_REF', models.CharField(blank=True, max_length=50)),
                ('SPEC_DPTH', models.FloatField(null=True)),
                ('SPEC_DESC', models.TextField(blank=True)),
                ('SPEC_PREP', models.TextField(blank=True)),
                ('TREG_TYPE', models.CharField(blank=True, max_length=50, verbose_name='Test Type')),
                ('TREG_COND', models.CharField(blank=True, max_length=50, verbose_name='Sample Condition')),
                ('TREG_COH', models.FloatField(null=True, verbose_name='Cohesion (kPa)')),
                ('TREG_PHI', models.FloatField(null=True, verbose_name='Angle of Friction (°)')),
                ('TREG_FCR', models.CharField(blank=True, max_length=50, verbose_name='Failure Criterion')),
                ('TREG_REM', models.TextField(blank=True, verbose_name='Remarks')),
                ('TREG_METH', models.CharField(blank=True, max_length=255, verbose_name='Test Method')),
                ('TREG_LAB', models.CharField(blank=True, max_length=255, verbose_name='Laboratory Name')),
                ('TREG_CRED', models.CharField(blank=True, max_length=255, verbose_name='Accrediting Body and Reference Number')),
                ('TEST_STAT', models.CharField(blank=True, max_length=50, verbose_name='Test Status')),
                ('FILE_FSET', models.CharField(blank=True, max_length=255, verbose_name='File reference')),
                ('SPEC_BASE', models.FloatField(null=True, verbose_name='Depth to Base of Specimen')),
                ('TREG_DEV', models.TextField(blank=True, verbose_name='Deviation from the Specified Procedure')),
                ('SAMP_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='triaxial_general', to='core.samp', verbose_name='Sample ID')),
            ],
        ),
        migrations.CreateModel(
            name='TRET',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('LOCA_ID', models.CharField(max_length=255, verbose_name='Location')),
                ('SAMP_TOP', models.FloatField(verbose_name='Depth to top of sample')),
                ('SAMP_REF', models.CharField(max_length=255, verbose_name='Sample Reference')),
                ('SAMP_TYPE', models.CharField(max_length=255, verbose_name='Sample Type')),
                ('SPEC_REF', models.CharField(max_length=255, verbose_name='Specimen Reference')),
                ('SPEC_DPTH', models.FloatField(verbose_name='Depth to top of test specimen')),
                ('SPEC_DESC', models.TextField(verbose_name='Specimen Description')),
                ('SPEC_PREP', models.TextField(verbose_name='Details of Specimen Preparation')),
                ('TRET_TESN', models.CharField(max_length=255, verbose_name='Triaxial Test/Stage Number')),
                ('TRET_SDIA', models.FloatField(verbose_name='Specimen Diameter')),
                ('TRET_LEN', models.FloatField(verbose_name='Specimen Length')),
                ('TRET_IMC', models.FloatField(verbose_name='Initial Water/Moisture Content')),
                ('TRET_FMC', models.FloatField(verbose_name='Final Water/Moisture Content')),
                ('TRET_BDEN', models.FloatField(verbose_name='Initial Bulk Density')),
                ('TRET_DDEN', models.FloatField(verbose_name='Initial Dry Density')),
                ('TRET_SAT', models.CharField(max_length=255, verbose_name='Method of Saturation')),
                ('TRET_CONS', models.TextField(verbose_name='Details of Consolidation Stage')),
                ('TRET_CONP', models.FloatField(verbose_name='Effective Stress at End of Consolidation')),
                ('TRET_CELL', models.FloatField(verbose_name='Total Cell Pressure During Shearing Stage')),
                ('TRET_PWPI', models.FloatField(verbose_name='Porewater Pressure at Start of Shear Stage')),
                ('TRET_STRR', models.FloatField(verbose_name='Rate of Axial Strain During Shear')),
                ('TRET_STRN', models.FloatField(verbose_name='Axial Strain at Failure')),
                ('TRET_DEVF', models.FloatField(verbose_name='Deviator Stress at Failure')),
                ('TRET_PWPF', models.FloatField(verbose_name='Porewater Pressure at Failure')),
                ('TRET_STV', models.FloatField(verbose_name='Volumetric Strain at Failure (Drained Only)')),
                ('TRET_MODE', models.CharField(max_length=255, verbose_name='Mode of Failure')),
                ('TRET_REM', models.TextField(verbose_name='Comments')),
                ('FILE_FSET', models.CharField(max_length=255, verbose_name='File reference')),
                ('TRET_BACK', models.FloatField(verbose_name='Final Back Pressure Applied Prior to Shearing')),
                ('TRET_VERT', models.FloatField(verbose_name='Vertical Strain at End of Consolidation')),
                ('TRET_VOLM', models.FloatField(verbose_name='Volumetric Strain at End of Consolidation')),
                ('TRET_RATE', models.FloatField(verbose_name='Rate of Volumetric Strain Immediately Prior to Shearing')),
                ('TRET_BVAL', models.FloatField(verbose_name='Final B-Value Prior to Shearing')),
                ('TRET_DRN', models.CharField(max_length=255, verbose_name='Type of Drainage Conditions During Shear')),
                ('TRET_MEMB', models.FloatField(verbose_name='Membrane Corrections Applied at Failure')),
                ('TRET_FILC', models.FloatField(verbose_name='Filter Paper Corrections Applied at Failure')),
                ('TRET_IVR', models.FloatField(verbose_name='Initial Voids Ratio')),
                ('TRET_SATR', models.FloatField(verbose_name='Saturation Percentage')),
                ('TRET_CVP', models.FloatField(verbose_name='Effective Vertical Pressure at End of Consolidation')),
                ('TRET_CRP', models.FloatField(verbose_name='Effective Radial Pressure at End of Consolidation')),
                ('TRET_MEAN', models.FloatField(verbose_name='Peak Mean Effective Stress During Shear')),
                ('TRET_CU', models.FloatField(verbose_name='Undrained Shear Strength at Failure')),
                ('TRET_E50', models.FloatField(verbose_name='Secant Modulus at 50% Peak Deviator Stress')),
                ('TRET_FVR', models.FloatField(verbose_name='Final Voids Ratio')),
                ('TRET_TYPE', models.CharField(blank=True, max_length=50, verbose_name='Test Type')),
                ('TRET_COND', models.CharField(blank=True, max_length=50, verbose_name='Sample Condition')),
                ('TRET_EP50', models.FloatField(verbose_name='Epsilon 50 (%)')),
                ('TRET_K0', models.FloatField(verbose_name='Calculated K0')),
                ('TRET_EXPP', models.FloatField(verbose_name='Excess Pore Pressure')),
                ('TRET_MAJOR', models.FloatField(verbose_name='Major Principal Stress At Failure ')),
                ('TRET_MINOR', models.FloatField(verbose_name='Minor Principal Stress At Failure ')),
                ('TRET_SQ', models.FloatField(verbose_name='Sample Quality')),
                ('TRET_QNET', models.FloatField(verbose_name='Qnet Correlation')),
                ('SAMP_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='triaxial_test', to='core.treg', verbose_name='Sample ID')),
            ],
        ),
    ]
